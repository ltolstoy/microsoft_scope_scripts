//Script GUID:71f43ab0-02b5-489c-b14e-65157bb0d0fc
//Used for tracking history
/*
<Owerview>
Script to extract some useful info from NRT (near real time log) stored in COSMOS here
https://aad.cosmos09.osdinfra.net/cosmos/UDC/local/Personalization/MsnFeedback/Events/2020/07/Structured-RawEpEventsLog-2020-07-01.ss?property=info
or from MSN.DnI 
https://cosmos09.osdinfra.net:443/cosmos/MSN.DnI/shares/UDC/Personalization/MsnFeedback/Events/2020/07/Structured-RawEpEventsLog-2020-07-01.ss?property=info
PayLoad	string
EventType	string
SubEventType	string
ActivityId	string
AreaOfPage	string
PartnerName	string
TargetId	string
TargetType	string
YPos	string
Layout	string
UserId	string
IdType	string
EventDateTime	string
Canvas	string
UserAgent	string
FlightId	string
Market	string
PageType	string
PageName	string
Headline	string
HeadlineHash	string
AbFlags	string
Lineage	string
LineageOrdinal	string
            Here PayLoad - has everything that next columns have, but in json format. Next column duplicate info, we need just few of them:
TargetId = docId, like "BB16aCWa"
EventDateTime like "6/30/2020 11:59:55 PM" - to select events from time window
Headline like "Weak Apple 5G iPhone shipments: Report" - here will skip headline at all
Need to join with https://cosmos09.osdinfra.net:443/cosmos/MSN.DnI/shares/UDC/RnR/DailyCMSUpdate/2020/07/DailyCMS_2020_07_01.ss
by documentid
and have topic (vert and subVert)

So we select those columns and write tha into separate file for processing (csv ot tsv probably)
Note: data is stored on UDC VC! But job should be submitted on MSN.DnI. And from MSN.DnI path will be
/shares/UDC/Personalization/MsnFeedback/Events/
To switch clusters:
goto Extensions-Scope-VC selector, Cluster= cosmos09, VC=UDC

8/6/2020 - let's exclude everything infopane-related, to eliminate influence of pinned on top articles in infopane.
'Lineage' column has 'infopane_a' or 'Infopane' in it, so just exclude records like those.
Should lead to smaller file, without bias related to pinned news (may be?) - result is ~2 smaller
8/10/2020 - repeat this for next days
*/


#DECLARE streamExpiry string = "30";
#DECLARE date string = "2020-07-06";  //date of interest
//input
#DECLARE msnfeedbacklog string = string.Format("/shares/UDC/Personalization/MsnFeedback/Events/%Y/%m/Structured-RawEpEventsLog-%Y-%m-%d.ss?date=") + @date; 
//like /shares/UDC/Personalization/MsnFeedback/Events/2020/07/Structured-RawEpEventsLog-2020-07-01.ss
#DECLARE dailycmsupdate string = string.Format("/shares/UDC/RnR/DailyCMSUpdate/2020/07/DailyCMS_%Y_%m_%d.ss?date=") + @date;
// join to this file by documentId
//output should be in tsv, csv
#DECLARE msnfeedbacklogwithtopic string =  string.Format("/shares/UDC/RnR/Users/v-letols/topicnoheadline_without_infopane-%Y%m%d.tsv?date=") + @date;
#DECLARE docidheadline string = string.Format("/shares/UDC/RnR/Users/v-letols/docidheadline-%Y%m%d.tsv?date=") + @date;

sslog = SSTREAM @msnfeedbacklog;        // msnfeedbacklog is a structured stram already
dailyupdate = SSTREAM @dailycmsupdate; // dailycmsupdate is a structured stram with vert, subVert columns

mfbl = //MSN feedback log
    SELECT TargetId,
           EventDateTime
    FROM sslog
    WHERE ((EventType == "Event.Click")
          && (EventDateTime.StartsWith("7") )
          && (Market == "en-us")
          && (TargetId.StartsWith("B") || TargetId.StartsWith("A") ))
          && (!Lineage.ToLower().Contains("infopane"));
         
duts =   //daily update  topics, subtopics
    SELECT
    documentId,
    vert,
    subVert
    FROM dailyupdate
    WHERE ((!string.IsNullOrEmpty(vert)) || (!string.IsNullOrEmpty(subVert)));  // exclude absent vert and subvert

extr =
    SELECT 
    TargetId,
    EventDateTime,
    vert,
    subVert
    FROM mfbl INNER JOIN duts ON mfbl.TargetId == duts.documentId
    ORDER BY EventDateTime;

// As we already have docidheader file for 7.1.2020, can skip this to save time

//docidheader =   // create distinct pairs docid header_line
//    SELECT DISTINCT TargetId,
//           Headline
//    FROM sslog
//    WHERE ((EventType == "Event.Click")
//          && (Market == "en-us")
//          && (TargetId.StartsWith("B") || TargetId.StartsWith("A")));


OUTPUT extr TO @msnfeedbacklogwithtopic
   WITH STREAMEXPIRY @streamExpiry;

//OUTPUT docidheader TO @docidheadline
//   WITH STREAMEXPIRY @streamExpiry;
